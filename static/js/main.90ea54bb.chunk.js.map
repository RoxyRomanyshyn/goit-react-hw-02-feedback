{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","name","onClick","Section","title","children","Notification","FeedbackForm","state","positiveFeedback","handleClick","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","Math","round","Component","ReactDOM","render","document","getElementById"],"mappings":"wPAEe,SAASA,EAAT,GAMX,IALAC,EAKD,EALCA,KACAC,EAID,EAJCA,QACAC,EAGD,EAHCA,IACAC,EAED,EAFCA,MACAC,EACD,EADCA,mBAEA,OAAS,oCAEL,qCAEIJ,EAFJ,KAFK,IAKG,wCAEJC,EAFI,KALH,IAQG,oCAEJC,EAFI,KARH,IAWG,sCAEJC,EAFI,KAXH,IAcG,kDAEJC,EAFI,OAdH,KCPE,SAASC,EAAT,GAEX,IADAC,EACD,EADCA,gBAEA,OAAS,oCAEL,4BACOC,KAAO,OACdC,QACIF,GAHJ,UAFK,IAMe,4BACbC,KAAO,UACdC,QACIF,GAHgB,aANf,IAUkB,4BAChBC,KAAO,MACdC,QACIF,GAHmB,SAVlB,KCHE,SAASG,EAAT,GAGX,IAFAC,EAED,EAFCA,MACAC,EACD,EADCA,SAEA,OAAS,oCAEL,gCAEID,EAFJ,KAFK,IAMDC,EANC,KCJE,SAASC,EAAT,GAEZ,EADCF,MAEA,OAAS,oCAEL,kDAFK,K,ICGQG,E,4MAEnBC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPY,iBAAkB,G,EAGpBC,YAAc,SAAAC,GAAM,IAEhBV,EACEU,EAAEC,OADJX,KAGF,EAAKY,UAAS,SAAAC,GACZ,OAAO,eACJb,EAAOa,EAAUb,GAAQ,MAG9B,EAAKc,qBACL,EAAKC,mC,mEAGLC,KAAKJ,UAAS,SAAAC,GACZ,MAAO,CACLjB,MAAOiB,EAAUpB,KAAOoB,EAAUnB,QAAUmB,EAAUlB,U,wDAK1DqB,KAAKJ,UAAS,SAAAC,GACZ,MAAO,CACLL,iBAAkBS,KAAKC,MAAOL,EAAUpB,KAAOoB,EAAUjB,MAAS,W,+BAKtE,OAAS,oCAEP,kBACAM,EADA,CACQC,MAAQ,yBAChB,kBACAL,EADA,CACgBC,gBACdiB,KAAKP,cAJP,KAUA,kBACAP,EADA,CACQC,MAAQ,cADhB,IAEEa,KAAKT,MAAMX,MAAQ,EAAM,kBACvBJ,EADuB,CACZC,KACTuB,KAAKT,MAAMd,KAEbC,QACEsB,KAAKT,MAAMb,QAEbC,IACEqB,KAAKT,MAAMZ,IAEbC,MACEoB,KAAKT,MAAMX,MAEbC,mBACEmB,KAAKT,MAAMC,mBAGT,kBACJH,EADI,MAnBR,KAZO,S,GAtC6Bc,aCF1CC,IAASC,OAEP,kBACA,EADA,MAGAC,SAASC,eAAe,U","file":"static/js/main.90ea54bb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Statistics({\r\n    good,\r\n    neutral,\r\n    bad,\r\n    total,\r\n    positivePercentage\r\n}) {\r\n    return ( <\r\n        >\r\n        <\r\n        p > Good: {\r\n            good\r\n        } < /p> <\r\n        p > Neutral: {\r\n            neutral\r\n        } < /p> <\r\n        p > Bad: {\r\n            bad\r\n        } < /p> <\r\n        p > Total: {\r\n            total\r\n        } < /p> <\r\n        p > Positive Feedback: {\r\n            positivePercentage\r\n        } % < /p> <\r\n        />\r\n    )\r\n\r\n}","import React from 'react';\r\n\r\nexport default function FeedbackOptions({\r\n    onLeaveFeedback\r\n}) {\r\n    return ( <\r\n        >\r\n        <\r\n        button name = \"good\"\r\n        onClick = {\r\n            onLeaveFeedback\r\n        } > Good < /button> <\r\n        button name = \"neutral\"\r\n        onClick = {\r\n            onLeaveFeedback\r\n        } > Neutral < /button> <\r\n        button name = \"bad\"\r\n        onClick = {\r\n            onLeaveFeedback\r\n        } > Bad < /button> <\r\n        />\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function Section({\r\n    title,\r\n    children\r\n}) {\r\n    return ( <\r\n        >\r\n        <\r\n        h2 > {\r\n            title\r\n        } < /h2> {\r\n            children\r\n        } <\r\n        />\r\n    )\r\n\r\n}","import React from 'react';\r\n\r\nexport default function Notification({\r\n    title\r\n}) {\r\n    return ( <\r\n        >\r\n        <\r\n        p > No feedback given < /p> <\r\n        />\r\n    )\r\n}","import React, {\n  Component\n} from 'react';\nimport Statistics from './Statistics/Statistics';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Section from './Section/Section';\nimport Notification from './Notification/Notification';\n\nexport default class FeedbackForm extends Component {\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n    total: 0,\n    positiveFeedback: 0,\n  };\n\n  handleClick = e => {\n    const {\n      name\n    } = e.target;\n\n    this.setState(prevState => {\n      return {\n        [name]: prevState[name] + 1,\n      };\n    });\n    this.countTotalFeedback();\n    this.countPositiveFeedbackPercentage();\n  };\n  countTotalFeedback() {\n    this.setState(prevState => {\n      return {\n        total: prevState.good + prevState.neutral + prevState.bad,\n      };\n    });\n  }\n  countPositiveFeedbackPercentage() {\n    this.setState(prevState => {\n      return {\n        positiveFeedback: Math.round((prevState.good / prevState.total) * 100),\n      };\n    });\n  }\n  render() {\n    return ( <\n      >\n      <\n      Section title = \"Please leave feedback\" >\n      <\n      FeedbackOptions onLeaveFeedback = {\n        this.handleClick\n      } >\n      <\n      /FeedbackOptions> < /\n      Section >\n\n      <\n      Section title = \"Statistics\" > {\n        this.state.total > 0 ? ( <\n          Statistics good = {\n            this.state.good\n          }\n          neutral = {\n            this.state.neutral\n          }\n          bad = {\n            this.state.bad\n          }\n          total = {\n            this.state.total\n          }\n          positivePercentage = {\n            this.state.positiveFeedback\n          }\n          />\n        ) : ( <\n          Notification / >\n        )\n      } <\n      /Section> < /\n      >\n    );\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n\n  <\n  App / > ,\n\n  document.getElementById('root')\n);"],"sourceRoot":""}